{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","prevValue","name","props","clearInterval","React","Component","App","isVisible","clockName","hideClock","showClock","randomName","Math","floor","random","toString","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"yLAUaA,EAAb,4MACEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,gCAeE,SAAmBS,GACbA,EAAUC,OAASN,KAAKO,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DN,KAAKO,MAAMD,SAlBhF,kCAsBE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WAxBzB,oBA4BE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KAER,OACE,mCACE,8CAEG,IACAA,WApCX,GAA2Ba,IAAMC,WCFpBC,EAAb,4MACEhB,MAAe,CACbiB,WAAW,EACXC,UAAW,WAHf,EAMEC,UAAY,WACV,EAAKZ,SAAS,CAAEU,WAAW,KAP/B,EAUEG,UAAY,WACV,EAAKb,SAAS,CAAEU,WAAW,KAX/B,EAcEI,WAAa,WACX,EAAKd,SAAS,CACZW,UACEI,KAAKC,MAAsB,GAAhBD,KAAKE,UAAeC,cAjBvC,4CAsBE,WACE,MAAiCpB,KAAKL,MAA9BiB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAEnB,OACE,sBAAKQ,UAAU,MAAf,UACE,6CAECT,GACC,cAAC,EAAD,CAAON,KAAMO,IAGf,wBACES,KAAK,SACLD,UAAU,cACVE,QAASvB,KAAKe,UAHhB,wBAQA,wBACEO,KAAK,SACLD,UAAU,cACVE,QAASvB,KAAKc,UAHhB,wBAQA,wBACEQ,KAAK,SACLD,UAAU,cACVE,QAASvB,KAAKgB,WAHhB,oCAjDR,GAAyBP,IAAMC,WCL/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.952ca6b5.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevValue: Props) {\n    if (prevValue.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevValue.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {time}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isVisible: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isVisible: true,\n    clockName: 'No name',\n  };\n\n  hideClock = () => {\n    this.setState({ isVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isVisible: true });\n  };\n\n  randomName = () => {\n    this.setState({\n      clockName: (\n        Math.floor(Math.random() * 10).toString()\n      ),\n    });\n  };\n\n  render() {\n    const { isVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isVisible && (\n          <Clock name={clockName} />\n        )}\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.randomName}\n        >\n          Set random name\n        </button>\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}